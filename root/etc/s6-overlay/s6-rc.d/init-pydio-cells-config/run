#!/usr/bin/with-contenv bash
# shellcheck shell=bash

mkdir -p "${CELLS_WORKING_DIR}/keys"
SERVER_IP=${SERVER_IP:-0.0.0.0}
if [ -f "${CELLS_WORKING_DIR}/keys/cert.crt" ] && openssl x509 -in "${CELLS_WORKING_DIR}/keys/cert.crt" -noout -text | grep -q "$SERVER_IP"; then
    echo "using existing self signed cert"
else
    echo "generating self signed cert with SAN $SERVER_IP"
    openssl req -new -x509 -days 3650 -nodes -out "${CELLS_WORKING_DIR}/keys/cert.crt" -keyout "${CELLS_WORKING_DIR}/keys/cert.key" -extensions 'v3_req' \
        -config <(printf "[req]\nprompt=no\ndistinguished_name=all_the_dn_details\nreq_extensions=v3_req\n[all_the_dn_details]\nC=US\nST=CA\nL=Carlsbad\nO=Linuxserver.io\nOU=LSIO Server\nCN=*\n[v3_req]\nsubjectAltName=DNS:pydio-cells,IP:${SERVER_IP}")
fi

if [ -f "${CELLS_WORKING_DIR}/pydio.json" ]; then
    CURRENTURL=$(jq -r '.defaults.url' "${CELLS_WORKING_DIR}/pydio.json")
    if [ "$CURRENTURL" != "$EXTERNALURL" ]; then
        echo "Updating external url from environment variable."
        jq  ".defaults.url = \"$EXTERNALURL\"" "${CELLS_WORKING_DIR}/pydio.json" > /tmp/pydio.json
        mv /tmp/pydio.json "${CELLS_WORKING_DIR}/pydio.json"
    fi
fi

# permissions
chown -R abc:abc \
    /app \
    "${CELLS_WORKING_DIR}"
