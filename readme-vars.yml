---

# project information
project_name: pydio-cells
project_url: "https://pydio.com/"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pydio-cells-icon.png"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using the Go language following a micro-service architecture."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"

# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}

# container parameters
common_param_env_vars_enabled: true #PGID, PUID, etc, you can set it to 'optional'
param_container_name: "{{ project_name }}"
param_usage_include_hostname: true #you can set it to 'optional'
param_hostname: "{{ project_name }}"
param_hostname_desc: "Pydio Cells uses the hostname to verify local files. This setting is required and should not be changed after it has been set."
param_usage_include_env: true
param_env_vars:
  - {env_var: "EXTERNALURL", env_value: "yourdomain.url", desc: "The external url you would like to use to access Pydio Cells (Can be https://domain.url or https://IP:PORT)."}
param_usage_include_vols: true
param_volumes:
  - {vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/config", desc: "All the config files reside here."}
param_usage_include_ports: true
param_ports:
  - {external_port: "8080", internal_port: "8080", port_desc: "Http port"}
# optional container parameters
opt_param_usage_include_env: true
opt_param_env_vars:
  - {env_var: "SERVER_IP", env_value: "0.0.0.0", desc: "Enter the LAN IP of the docker server. Required for local access by IP, added to self signed cert as SAN (not required if accessing only through reverse proxy)."}

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  You must first create a mysql database for Pydio Cells. Using our [mariadb image](https://hub.docker.com/r/linuxserver/mariadb) is recommended.

  Then access the web gui setup wizard at `https://SERVER_IP:8080` if accessing locally (must set `SERVER_IP` env var), or at `https://pydio-cells.domain.com` if reverse proxying.

# changelog
changelogs:
  - {date: "27.06.24:", desc: "Rebasing to Alpine 3.20.."}
  - {date: "14.03.24:", desc: "Rebasing to alpine 3.19. Grpc port defaults to 8080."}
  - {date: "11.10.23:", desc: "Rebasing to alpine 3.18. Build on alpine edge with Go 1.21."}
  - {date: "06.07.23:", desc: "Deprecate armhf. As announced [here](https://www.linuxserver.io/blog/a-farewell-to-arm-hf)"}
  - {date: "01.12.22:", desc: "Rebasing to alpine 3.17. Adding multi-arch support. Updating cli arguments for v4 compatibility."}
  - {date: "19.10.22:", desc: "Rebasing to alpine 3.16. Upgrading to s6v3. Updating build instructions for v4."}
  - {date: "19.09.22:", desc: "Rebasing to alpine 3.15."}
  - {date: "23.01.21:", desc: "Rebasing to alpine 3.13."}
  - {date: "01.06.20:", desc: "Rebasing to alpine 3.12."}
  - {date: "18.04.20:", desc: "Switch to https as default (only affects new installs). Add self signed cert, add `SERVER_IP` var for adding to cert as SAN. Add optional gRPC port mapping for CellsSync."}
  - {date: "17.04.20:", desc: "Update compile options, previous release was broken for new installs."}
  - {date: "19.12.19:", desc: "Rebasing to alpine 3.11."}
  - {date: "12.12.19:", desc: "Initial Release"}
